package com.github.MikeKahn.core;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 * Created by Michael on 10/25/2016.
 */
public class UserControlGUI extends JFrame {


    private JPanel panelParent;
    private JButton followButton;
    private JTextField fieldTweet;
    private JButton postButton;
    private JTextField fieldUserID;
    private JList<String> listFollowing;
    private JList<String> listFeed;

    private DefaultListModel<String> msgModel;

    UserControlGUI(User user) {
        setTitle("User Control - " + user.id);
        setSize(600, 480);
        setLocationRelativeTo(null);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                Manager.getInstance().setActive(user.id, null); //disable the user
                e.getWindow().dispose();
            }
        });
        add(panelParent);

        listFollowing.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        DefaultListModel<String> model = new DefaultListModel<>();
        user.getFollowings().forEach(model::addElement);
        listFollowing.setModel(model);

        listFeed.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        msgModel = new DefaultListModel<>();
        for (Message m : user.getFeed()) {
            msgModel.addElement(m.toString());
        }
        listFeed.setModel(msgModel);

        fieldUserID.addActionListener(e -> { //enter is pressed
            String id = fieldUserID.getText().trim();
            if (!id.isEmpty()) { //check if user ID field is empty
                user.follow(id, model);
                fieldUserID.setText(""); //clear input
            }
        });

        followButton.addActionListener(e -> {
            String id = fieldUserID.getText().trim();
            if (!id.isEmpty()) { //check if user ID field is empty
                user.follow(id, model);
                fieldUserID.setText(""); //clear input
            }
        });

        fieldTweet.addActionListener(e -> { //enter is pressed
            if (!fieldTweet.getText().isEmpty()) {
                user.postMessage(fieldTweet.getText());
                fieldTweet.setText(""); //clear input
            }
        });

        postButton.addActionListener(e -> {
            if (!fieldTweet.getText().isEmpty()) {
                user.postMessage(fieldTweet.getText());
                fieldTweet.setText(""); //clear input
            }
        });
    }

    DefaultListModel<String> getModel() {
        return msgModel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelParent = new JPanel();
        panelParent.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(6, 2, new Insets(0, 0, 0, 0), -1, -1));
        panelParent.setBackground(new Color(-9737365));
        followButton = new JButton();
        followButton.setBackground(new Color(-10855846));
        followButton.setText("Follow");
        panelParent.add(followButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fieldTweet = new JTextField();
        panelParent.add(fieldTweet, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        postButton = new JButton();
        postButton.setBackground(new Color(-10855846));
        postButton.setEnabled(true);
        postButton.setText("Post");
        panelParent.add(postButton, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setFont(new Font(label1.getFont().getName(), label1.getFont().getStyle(), 18));
        label1.setText("Following");
        panelParent.add(label1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setFont(new Font(label2.getFont().getName(), label2.getFont().getStyle(), 18));
        label2.setText("News Feed");
        panelParent.add(label2, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fieldUserID = new JTextField();
        panelParent.add(fieldUserID, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panelParent.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        listFollowing = new JList();
        scrollPane1.setViewportView(listFollowing);
        final JScrollPane scrollPane2 = new JScrollPane();
        panelParent.add(scrollPane2, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        listFeed = new JList();
        scrollPane2.setViewportView(listFeed);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelParent;
    }
}
